{"ast":null,"code":"// cartItems=> all existing cart items  that are in our cart items array\n// cartItemToAdd=> the cart item that we want to add\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["D:/Projects/Udemy/e-commerce/my-app/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AAAA;AAIA;AACA,OAAO,MAAMA,aAAa,GAAC,CAACC,SAAD,EAAYC,aAAZ,KAA4B;AACnD,QAAMC,gBAAgB,GAAEF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAEA,QAAQ,CAACC,EAAT,KAAeJ,aAAa,CAACI,EAAtD,CAAxB;;AAEA,MAAIH,gBAAJ,EAAqB;AACjB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACrBA,QAAQ,CAACC,EAAT,KAAeJ,aAAa,CAACI,EAA7B,GAAkC,EAAC,GAAGD,QAAJ;AAAcG,MAAAA,QAAQ,EAACH,QAAQ,CAACG,QAAT,GAAkB;AAAzC,KAAlC,GACEH,QAFH,CAAP;AAIH;;AACD,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,aAAJ;AAAmBM,IAAAA,QAAQ,EAAC;AAA5B,GAAf,CAAP;AACH,CAVM;AAYP,OAAO,MAAMC,kBAAkB,GAAC,CAACR,SAAD,EAAWS,gBAAX,KAA+B;AAE3D,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAGA,QAAQ,CAACC,EAAT,KAAcI,gBAAgB,CAACJ,EADrB,CAAzB;;AAIA,MAAGH,gBAAgB,CAACK,QAAjB,KAA4B,CAA/B,EAAiC;AAC7B,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA9D,CAAP;AACH;;AACD,SAAOL,SAAS,CAACM,GAAV,CACHF,QAAQ,IAAGA,QAAQ,CAACC,EAAT,KAAcI,gBAAgB,CAACJ,EAA/B,GAAmC,EAAC,GAAGD,QAAJ;AAAaG,IAAAA,QAAQ,EAACH,QAAQ,CAACG,QAAT,GAAkB;AAAxC,GAAnC,GAA+EH,QADvF,CAAP;AAIH,CAbM","sourcesContent":["// cartItems=> all existing cart items  that are in our cart items array\r\n\r\n\r\n\r\n// cartItemToAdd=> the cart item that we want to add\r\nexport const addItemToCart=(cartItems, cartItemToAdd)=>{\r\n    const existingCartItem =cartItems.find(cartItem=>cartItem.id=== cartItemToAdd.id);\r\n\r\n    if (existingCartItem){\r\n        return cartItems.map(cartItem =>\r\n                cartItem.id=== cartItemToAdd.id ? {...cartItem, quantity:cartItem.quantity+1}\r\n                : cartItem\r\n             )\r\n    }\r\n    return [...cartItems, {...cartItemToAdd, quantity:1}]\r\n}\r\n\r\nexport const removeItemFromCart=(cartItems,cartItemToRemove )=>{\r\n\r\n    const existingCartItem = cartItems.find(\r\n        cartItem =>cartItem.id===cartItemToRemove.id\r\n    )\r\n\r\n    if(existingCartItem.quantity===1){\r\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id )\r\n    }\r\n    return cartItems.map(\r\n        cartItem=> cartItem.id===cartItemToRemove.id? {...cartItem,quantity:cartItem.quantity-1}: cartItem\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}