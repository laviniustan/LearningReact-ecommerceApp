{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Udemy\\\\e-commerce\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport HomePage from './pages/homepage/homepage.comopnent';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/headre.component';\nimport './App.css';\nimport SignInUp from './pages/sign-in-sign-up/sign-in-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selector';\nimport { createStructuredSelector } from 'reselect';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscibeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscibeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapshot => {\n          // this.setState({\n          //   currentUser:{\n          setCurrentUser({\n            id: snapshot.id,\n            ...snapshot.data()\n          });\n        });\n      } else {\n        // setCurrentUser({currentUser: userAuth})\n        setCurrentUser(userAuth);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscibeFromAuth();\n  }\n\n  render() {\n    //  const {currentUser}= this.props;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }) : React.createElement(SignInUp, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n} // if is log-in to stay log-in\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n}); // update our app comp so that it's  able to update the reuder value with the new SET_CURRENT_USER => user.acrions\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/Projects/Udemy/e-commerce/my-app/src/App.js"],"names":["React","HomePage","Switch","Route","Redirect","ShopPage","Header","SignInUp","auth","createUserProfileDocument","connect","setCurrentUser","selectCurrentUser","createStructuredSelector","CheckoutPage","App","Component","unsubscibeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAuC,kBAAvC;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,mDAArB;AACA,SAAQC,IAAR,EAAcC,yBAAd,QAA8C,2BAA9C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,SAAQC,iBAAR,QAAgC,4BAAhC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;;AAKA,MAAMC,GAAN,SAAkBf,KAAK,CAACgB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAUhCC,kBAVgC,GAUb,IAVa;AAAA;;AAYhCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACP,MAAAA;AAAD,QAAiB,KAAKQ,KAA5B;AACA,SAAKF,kBAAL,GAA0BT,IAAI,CAACY,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AAChE,UAAGA,QAAH,EAAY;AACV,cAAMC,OAAO,GAAE,MAAMb,yBAAyB,CAACY,QAAD,CAA9C;AAEAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAE;AAC3B;AACA;AACCb,UAAAA,cAAc,CAAC;AACZc,YAAAA,EAAE,EAACD,QAAQ,CAACC,EADA;AAEZ,eAAGD,QAAQ,CAACE,IAAT;AAFS,WAAD,CAAd;AAIF,SAPD;AAQD,OAXD,MAYI;AACF;AACAf,QAAAA,cAAc,CAACU,QAAD,CAAd;AACD;AACJ,KAjByB,CAA1B;AAkBD;;AAEDM,EAAAA,oBAAoB,GAAE;AACpB,SAAKV,kBAAL;AACD;;AAKDW,EAAAA,MAAM,GAAE;AAEN;AACF,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAG3B,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAGI,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAGS,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,MAAM,EAAE,MAAI,KAAKK,KAAL,CAAWU,WAAX,GAAyB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,GAA+C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAHA,CADF;AAaA;;AAzDgC,C,CA2DlC;;;AACA,MAAMC,eAAe,GAACjB,wBAAwB,CAAC;AAC7CgB,EAAAA,WAAW,EAACjB;AADiC,CAAD,CAA9C;;AAGA,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAI;AACrCrB,EAAAA,cAAc,EAACsB,IAAI,IAAGD,QAAQ,CAACrB,cAAc,CAACsB,IAAD,CAAf;AADO,CAAJ,CAAnC,C,CAIA;;;AACA,eAAevB,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ChB,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport HomePage from './pages/homepage/homepage.comopnent';\nimport { Switch, Route, Redirect} from 'react-router-dom';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/headre.component'\nimport './App.css';\nimport SignInUp from './pages/sign-in-sign-up/sign-in-sign-up.component'\nimport {auth, createUserProfileDocument} from './firebase/firebase.utils'\nimport {connect} from 'react-redux';\nimport {setCurrentUser} from './redux/user/user.actions'\nimport {selectCurrentUser} from './redux/user/user.selector'\nimport {createStructuredSelector} from 'reselect'\nimport CheckoutPage from './pages/checkout/checkout.component';\n\n\n\n\nclass App extends React.Component {\n  \n  // constructor(){\n  //   super();\n\n  //   this.state={\n  //       currentUser:null\n  //   }\n  // }\n\n  unsubscibeFromAuth=null\n\n  componentDidMount(){\n    const {setCurrentUser}=this.props\n    this.unsubscibeFromAuth = auth.onAuthStateChanged(async userAuth => {\n        if(userAuth){\n          const userRef= await createUserProfileDocument(userAuth);\n\n          userRef.onSnapshot(snapshot=>{\n            // this.setState({\n            //   currentUser:{\n             setCurrentUser({\n                id:snapshot.id,\n                ...snapshot.data()\n              })\n          })\n        }\n        else{\n          // setCurrentUser({currentUser: userAuth})\n          setCurrentUser(userAuth)\n        }\n    } ) \n  }\n\n  componentWillUnmount(){\n    this.unsubscibeFromAuth()\n  }\n\n \n \n \n  render(){\n\n    //  const {currentUser}= this.props;\n  return (\n    <div className=\"App\">\n    {/* <Header currentUser={currentUser}> */}\n    <Header/>\n    <Switch>\n        <Route exact path='/' component ={HomePage}/>\n        <Route path='/shop' component ={ShopPage}/>\n        <Route exact path='/checkout' component ={CheckoutPage}/>\n        <Route exact path='/signin' render={()=>this.props.currentUser? (<Redirect to='/'/> ):(<SignInUp/>)}/>\n    </Switch>\n        \n    </div>\n  );\n }\n}\n// if is log-in to stay log-in\nconst mapStateToProps=createStructuredSelector({\n  currentUser:selectCurrentUser\n})\nconst mapDispatchToProps = dispatch =>({\n  setCurrentUser:user=> dispatch(setCurrentUser(user))\n})\n\n// update our app comp so that it's  able to update the reuder value with the new SET_CURRENT_USER => user.acrions\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}