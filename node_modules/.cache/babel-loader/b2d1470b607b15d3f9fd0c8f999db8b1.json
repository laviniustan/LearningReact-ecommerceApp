{"ast":null,"code":"import { createSelector } from 'reselect'; // input selector\n\nconst SelectCart = state => state.cart;\n\nexport const SelectCartItems = createSelector( //  collection of  input selectors, second arg function that we return the value we want out of the selector\n[SelectCart], cart => cart.cartItems);\nexport const selectCartItemsCount = createSelector([SelectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartHidden = createSelector([SelectCart], cart => cart.hidden);\nexport const selectCartTotal = createSelector([SelectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["D:/Projects/Udemy/e-commerce/my-app/src/redux/cart/cart.selector.js"],"names":["createSelector","SelectCart","state","cart","SelectCartItems","cartItems","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartHidden","hidden","selectCartTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B,C,CAIA;;AAEA,MAAMC,UAAU,GAAEC,KAAK,IAAGA,KAAK,CAACC,IAAhC;;AAEA,OAAO,MAAMC,eAAe,GAAEJ,cAAc,EACxC;AACA,CAACC,UAAD,CAFwC,EAE1BE,IAAD,IAAQA,IAAI,CAACE,SAFc,CAArC;AAIP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAC3BC,SAAD,IAAaA,SAAS,CAACE,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAiCD,mBAAmB,GAACC,QAAQ,CAACC,QAA/E,EAAwF,CAAxF,CADe,CAA3C;AAIP,OAAO,MAAMC,gBAAgB,GAACX,cAAc,CACxC,CAACC,UAAD,CADwC,EAC1BE,IAAD,IAAQA,IAAI,CAACS,MADc,CAArC;AAIP,OAAO,MAAMC,eAAe,GAACb,cAAc,CACvC,CAACI,eAAD,CADuC,EACpBC,SAAD,IAAaA,SAAS,CAACE,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAiCD,mBAAmB,GAACC,QAAQ,CAACC,QAAT,GAAkBD,QAAQ,CAACK,KAAjG,EAAwG,CAAxG,CADQ,CAApC","sourcesContent":["import {createSelector} from 'reselect'\r\n\r\n\r\n\r\n// input selector\r\n\r\nconst SelectCart =state =>state.cart;\r\n\r\nexport const SelectCartItems= createSelector(\r\n    //  collection of  input selectors, second arg function that we return the value we want out of the selector\r\n    [SelectCart],(cart)=>cart.cartItems\r\n);\r\nexport const selectCartItemsCount = createSelector(\r\n    [SelectCartItems],(cartItems)=>cartItems.reduce((accumulatedQuantity, cartItem)=>accumulatedQuantity+cartItem.quantity,0)\r\n);\r\n\r\nexport const selectCartHidden=createSelector(\r\n    [SelectCart],(cart)=>cart.hidden\r\n);\r\n\r\nexport const selectCartTotal=createSelector(\r\n    [SelectCartItems],(cartItems)=>cartItems.reduce((accumulatedQuantity, cartItem)=>accumulatedQuantity+cartItem.quantity*cartItem.price ,0)\r\n)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}